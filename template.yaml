AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  bitflyer-slack-bot

  A bot that posts BitFlyer transaction information to Slack.

Parameters:
  SlackAPIKey:
    Type: String
    Default: xoxb-dummy-api-key
    NoEcho: true
  SlackTargetChannel:
    Type: String
    Default: sandbox
    NoEcho: true
  ProductCodesToBitflyerTicker:
    Type: String
    Default: '{ "ProductCodes": [ "BTC_JPY", "ETH_JPY" ] }'

Resources:
  BitflyerBotStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/bitflyer_bot.asl.json
      DefinitionSubstitutions:
        BitflyerTickersFunctionArn: !GetAtt BitflyerTickersFunction.Arn
        SNSTopicArn: !Ref SNSTopic
      Events:
        EveryMorningSchedule:
          Type: Schedule
          Properties:
            Description: Schedule to run the bitflyer bot state machine every morning
            Input: !Ref ProductCodesToBitflyerTicker
            Schedule: "cron(0 0 * * ? *)"
        EveryEveningSchedule:
          Type: Schedule
          Properties:
            Description: Schedule to run the bitflyer bot state machine every evening
            Input: !Ref ProductCodesToBitflyerTicker
            Schedule: "cron(0 9 * * ? *)"
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref BitflyerTickersFunction
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt SNSTopic.TopicName

  BitflyerTickersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/bitflyer_tickers/
      Handler: app.BitflyerTickers::App.lambda_handler
      Runtime: ruby2.7
      Timeout: 50

  SlackPostMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/slack_post_message/
      Handler: app.SlackPostMessage::App.lambda_handler
      Runtime: ruby2.7
      Environment:
        Variables:
          SLACK_API_TOKEN: !Ref SlackAPIKey
          SLACK_TARGET_CHANNEL: !Ref SlackTargetChannel

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SlackPostMessageFunction.Arn
      Principal: sns.amazonaws.com
      SourceArn: !Ref SNSTopic

  SNSTopic:
    Type: AWS::SNS::Topic
    DependsOn: SlackPostMessageFunction
    Properties:
      Subscription:
        - Endpoint: !GetAtt SlackPostMessageFunction.Arn
          Protocol: lambda
